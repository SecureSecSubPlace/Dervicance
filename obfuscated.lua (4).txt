return function(encryptedData)
    local shift, mapString, encryptedString = encryptedData:match("(%d+)::SecureSec::(.-)::SecureSec::(.-)")
    shift = tonumber(shift)

    -- Convert map and encrypted values back to tables
    local mapValues = {}
    for value in mapString:gmatch("[^,]+") do
        table.insert(mapValues, tonumber(value))
    end

    local encryptedValues = {}
    for value in encryptedString:gmatch("[^!]+") do
        table.insert(encryptedValues, tonumber(value))
    end

    local decrypted = {}

    for i, encryptedValue in ipairs(encryptedValues) do
        local mappedValue = (encryptedValue - shift + 1000) % 1000  -- Reverse shift
        local trueValue = mapValues[i]  -- Get original mapped value

        if mappedValue == trueValue then
            table.insert(decrypted, "?")  -- Placeholder for characters
        else
            table.insert(decrypted, "?")  -- Error handling
        end
    end

    local finalScript = table.concat(decrypted)
    loadstring(finalScript)()
end
