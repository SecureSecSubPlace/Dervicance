local function decrypt(encryptedData)
    local shift, mapString, encryptedString = encryptedData:match("(%d+)::SecureSec::(.-)::SecureSec::(.-)")
    shift = tonumber(shift)

    -- Convert map and encrypted values back to tables
    local mapValues = {}
    for value in mapString:gmatch("[^,]+") do
        table.insert(mapValues, tonumber(value))
    end

    local encryptedValues = {}
    for value in encryptedString:gmatch("[^!]+") do
        table.insert(encryptedValues, tonumber(value))
    end

    local decrypted = {}

    for i, encryptedValue in ipairs(encryptedValues) do
        local mappedValue = (encryptedValue - shift + 1000) % 1000  -- Reverse shift
        local trueValue = mapValues[i]  -- Get original mapped value

        for char, num in pairs(generateCustomMap(shift)) do
            if num == trueValue then
                table.insert(decrypted, char)  -- Restore character
                break
            end
        end
    end

    loadstring(table.concat(decrypted))()  -- Execute the decrypted script
end
