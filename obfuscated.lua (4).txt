local function decrypt(encryptedString)
    print("⏳ Loading.")  -- Step 1
    
    -- Extract shift, map, and encrypted data
    local shift, map, encryptedData = encryptedString:match("([^!]+)!([^!]+)!(.+)")
    
    if not shift or not map or not encryptedData then
        error("Decryption failed: Invalid encrypted string format.\nString: " .. tostring(encryptedString))
    end
    
    print("Step 1 Done")  -- Step 2
    
    -- Convert map into a table
    local mapTable = {}
    for num in map:gmatch("[^,]+") do
        table.insert(mapTable, tonumber(num))
    end
    
    -- Decrypt each character
    local decryptedString = {}
    local index = 1
    for char in encryptedData:gmatch(".") do
        local mappedIndex = mapTable[index] or 0
        local decryptedValue = string.byte(char) - (tonumber(shift) % 256) - mappedIndex
        local decryptedChar = string.char((decryptedValue % 256) % 256)
        
        print("Decrypting:", char, "->", decryptedChar)  -- Debugging step
        table.insert(decryptedString, decryptedChar)
        
        index = index + 1
    end
    
    print("Step 2 Done")  -- Step 3
    
    local finalOutput = table.concat(decryptedString)
    
    print("Step 3 finished running.")  -- Final message
    print("Decryption Finished:", finalOutput)
    
    return finalOutput
end
