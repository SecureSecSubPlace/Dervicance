return function(encryptedString)
    -- Extract shift, map, and encrypted data
    local shift, map, encryptedData = encryptedString:match("^(%d+)!([^!]+)!!(.+)$")
    if not shift or not map or not encryptedData then
        error("Decryption failed: " .. encryptedString)
    end

    shift = tonumber(shift)

    local mapTable = {}
    for num in map:gmatch("%d+") do
        table.insert(mapTable, tonumber(num))
    end

    -- Decrypt function
    local function decryptChar(char, index)
        local mappedIndex = mapTable[index] or 0
        local decryptedValue = string.byte(char) - (shift % 256) - mappedIndex
        return string.char((decryptedValue % 256) + 1)
    end

    -- Decrypt the data
    local decryptedString = {}
    local index = 1
    for char in encryptedData:gmatch(".") do
        table.insert(decryptedString, decryptChar(char, index))
        index = index + 1
    end

    return table.concat(decryptedString)
end
